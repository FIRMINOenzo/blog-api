services:
  postgres:
    image: postgres:16-alpine
    container_name: blog-api-postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: blog_api
    ports:
      - '5432:5432'
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres']
      interval: 5s
      timeout: 5s
      retries: 10
    networks:
      - blog-api-network

  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: blog-api-app
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      NODE_ENV: production
      PORT: 3000
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USERNAME: postgres
      DB_PASSWORD: postgres
      DB_DATABASE: blog_api
      JWT_SECRET: super-secret-jwt-key-for-docker-development
      JWT_EXPIRES_IN: 1d
    ports:
      - '3000:3000'
    networks:
      - blog-api-network

networks:
  blog-api-network:
    driver: bridge

volumes:
  postgres_data:
    driver: local
